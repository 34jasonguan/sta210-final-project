---
title: "A Statistical Analysis of Pokémon Competitive Viability"
subtitle: "STA210 Final Project"
author: "Jason Guan"
format: pdf
---

## Introduction

With over 480 million sales worldwide, Pokémon, short for Pocket Monsters, is one of the most successful game series in the world. Spanning 122 installations and roughly 28 years, the Pokémon games generally revolve around catching, training, and battling fictional creatures called "Pokémon" in a quest to become the Pokémon Champion, creating an entertaining gameplay experience for children and adults alike. Despite its simple premise and cartoon aesthetics, Pokémon is home to a rich competitive scene which has continued to grow and evolve since the establishment of the official Pokémon tournament circuit (Video Game Championships, or VGC) in 2009. 

At the heart of this community is Smogon, an online hub which has been hosting competitions, forums, and strategy guides since the early 2000s. Above all, Smogon's greatest contribution to the competitive scene comes in the form of its widely respected tiering system, forming the basis on which most competitive online play is based. These tiers, ranging from OU (OverUsed) to PU (Perfectly Useless) are based on Pokémon usage rates and dictate which Pokémon are allowed in different game modes, with more powerful Pokémon residing in the higher tiers and lesser used Pokémon inhabiting the lower tiers. At the top lies AG (anything goes) and Ubers, including Pokémon like Arceus and Rayquaza which are typically banned from online play. On the other hand, LC (Little Cup) and NFE (Not Fully Evolved) consist of unevolved, statistically weak pokemon which are not typically used in normal online play. 

This study seeks to analyze how factors such as stats, typing, and Mega/Legendary status impact a Pokémon's competitive rank, as well as the factors which may cause a Pokémon to be banned (AG/Uber tier) from OU competitive play. In doing so, we will hopefully be able to recognize trends in Pokémon power-scaling and identify weaknesses in game balancing which could potentially be addressed in future generations. 

\newpage

```{r}
#| echo: false
#| message: false
library(tidyverse)
library(tidymodels)
smogonlim <- read.csv("data/smogon.csv")
pokemon <- read.csv("data/pokemon.csv")
```

```{r}
#| echo: false
names(pokemon) <- c("X.", "Name", "Type.1", "Type.2", "Total", "HP", "Attack", 
                    "Defense", "Sp..Atk", "Sp..Def", "Speed", "Generation", 
                    "Legendary", "Color", "hasGender", "Pr_Male", "Egg_Group_1", 
                    "Egg_Group_2", "Mega", "Height_m", "Weight_kg", 
                    "Catch_Rate", "Body_Style")

pokemon <- pokemon |>
  mutate(Legendary = as.logical(Legendary), Mega = as.logical(Mega))

pokemon <- subset(pokemon, select = -c(Color, hasGender, Pr_Male,
                                          Egg_Group_1, Egg_Group_2, 
                                          Height_m, Weight_kg, 
                                          Catch_Rate, Body_Style))

missing_pokemon <- setdiff(pokemon$Name, smogonlim$Name)

missing_data <- pokemon |>
  filter(Name %in% missing_pokemon)

new_tier <- "LC"
missing_data$Tier <- new_tier

merged_data <- bind_rows(smogonlim, missing_data)

smogon <- merged_data |>
  group_by(Name) |>
  fill(X., Type.1, Type.2, Total, HP, Attack, Defense, 
       Sp..Atk, Sp..Def, Speed, Generation, Legendary, Mega, Tier) |>
  filter(!(Tier == "LC" & Legendary == TRUE))
```

```{r}
#| echo: false
realNFE = c("Bayleef", "Boldore", "Braixen", "Cascoon", "Charmeleon", 
            "Croconaw", "Dewott", "Dragonair", "Drifloon", "Duosion", 
            "Dusclops", "Eelektrik", "Electabuzz", "Flaaffy", "Floette", 
            "Frogadier", "Gloom", "Gothorita", "Graveler", "Grotle", "Grovyle", 
            "Herdier", "Ivysaur", "Jigglypuff", "Kakuna", "Kirlia", "Klang", 
            "Krokorok", "Lairon", "Lampent", "Lombre", "Loudred", "Luxio", 
            "Magmar", "Marill", "Marshtomp", "Meditite", "Metapod", "Murkrow", 
            "Nidorina", "Nidorino", "Nuzleaf", "Palpitoad", "Pidgeotto", 
            "Pignite", "Poliwhirl", "Pupitar", "Quilava", "Quilladin", 
            "Seadra", "Sealeo", "Servine", "Shelgon", "Silcoon", "Skiploom", 
            "Sliggoo", "Spewpa", "Staravia", "Swadloon", "Swirlix", "Tranquill", 
            "Vanillish", "Vibrava", "Wartortle", "Weepinbell", "Whirlipede", 
            "Yanma", "Zweilous")

smogon$Tier[smogon$Name %in% realNFE] <- "NFE"
smogon$Tier[smogon$Tier == "BL"] <- "UUBL"
smogon$Tier[smogon$Tier == "BL2"] <- "RUBL"
smogon$Tier[smogon$Tier == "BL3"] <- "NUBL"
smogon$Tier[smogon$Tier == "BL4"] <- "PUBL"

new_order <- c("LC", "NFE", "PU", "PUBL", "NU", "NUBL", "RU", "RUBL", "UU", 
               "UUBL", "OU", "Uber", "AG")
smogon$Tier <- factor(smogon$Tier, levels = new_order)
```

```{r}
#| echo: false
smogon$DualType <- ifelse(smogon$Type.2 == "", smogon$Type.1, 
                               paste(smogon$Type.1, "/", smogon$Type.2))
```

## Our Data

Due to a lack of available modern data, the two datasets used in this report come from Generation 6 of the Pokémon games, which includes the X/Y and Omega Ruby/Alpha Sapphire games. The 'smogon' dataset features 499 observations and 21 columns which include all Pokémon in and above the PU (Perfectly Useless) tier. To include the Pokémon that were missing from this dataset (those below the PU tier), a subset of missing Pokémon was taken from the 'pokemon' dataset. This data was cleaned by changing all variable names and removing unnecessary variables, then merged with the original dataset to create the updated 'smogon' data frame used throughout this project. The data was then further cleaned by giving the NFE and LC Pokémon their respective tiers and releveling the 'Tier' variable to reflect the actual ordering. **[write more about data cleaning]**

Important variables in this data frame include: 
- **HP, Attack, Sp. Atk, Defense, Sp. Def, and Speed**: 6 continuous variables representing a Pokémon's 6 in-game stats
- **Type.1, Type.2**: categorical variables which reflect the type(s) a Pokémon has (e.g. fire, water, grass, etc.)
- **Legendary/Mega**: boolean variables representing whether or not a Pokémon is Legendary (one of a kind in-game) or a Mega form
- **Tier** categorical variable storing the competitive tier (LC to AG) a Pokémon was placed in by Smogon

## Exploratory Data Analysis

```{r}
#| echo: false
smogon |> 
  ggplot(
    aes(y = Tier, x = Total)) +
  geom_boxplot() + 
  theme_bw()
```

```{r}
#| echo: false
smogoncomp <- smogon |>
  filter(Tier %in% c("AG", "Uber", "OU"))

types <- c(as.character(smogoncomp$Type.1), as.character(smogoncomp$Type.2))
type_counts <- table(types)

type_counts_df <- as.data.frame(type_counts)
names(type_counts_df) <- c("Type", "Count")
type_counts_df <- type_counts_df[type_counts_df$Type != "", ]

ggplot(type_counts_df, aes(x = "", y = Count, fill = Type)) +
  geom_bar(stat = "identity", color = "black", linewidth = 0.5) +
  coord_polar("y", start = 0) +  
  labs(title = "Distribution of Pokémon Types in OU and Above") +
  theme_void() +
  guides(fill = guide_legend(ncol = 2))
```

```{r}
#| echo: false
proportions <- prop.table(table(smogon$Legendary, smogon$Tier), margin = 1)
proportions_df <- as.data.frame(proportions)
colnames(proportions_df) <- c("Legendary", "Tier", "Proportion")

ggplot(proportions_df, aes(x = Tier, y = Proportion, 
                           fill = factor(Legendary))) +
  geom_bar(stat = "identity", position = "fill") +
  labs(title = "Proportion of Legendary Pokémon in Each Tier",
       x = "Tier", y = "Proportion",
       fill = "Legendary") +
  theme_bw()
```

```{r}
#| echo: false
proportions <- prop.table(table(smogon$Mega, smogon$Tier), margin = 1)
proportions_df <- as.data.frame(proportions)
colnames(proportions_df) <- c("Mega", "Tier", "Proportion")

ggplot(proportions_df, aes(x = Tier, y = Proportion, 
                           fill = factor(Mega))) +
  geom_bar(stat = "identity", position = "fill") +
  labs(title = "Proportion of Mega Pokémon in Each Tier",
       x = "Tier", y = "Proportion",
       fill = "Mega") +
  theme_bw()
```


## Methodology

```{r}
#| message: false
#| echo: false
library(MASS)
all_types <- c("Normal", "Fire", "Water", "Electric", "Grass", "Ice", 
               "Fighting", "Poison", "Ground", "Flying", "Psychic", "Bug", 
               "Rock", "Ghost", "Dragon", "Dark", "Steel", "Fairy")

for (type in all_types) {
  smogon <- smogon |> 
    mutate(!!paste0(type) := if_else(Type.1 == type | Type.2 == type, 1, 0))
}
```

```{r}
#| message: false
#| echo: false
model1 <- polr(Tier ~ HP + Attack + Defense + Sp..Atk + Sp..Def + Speed + 
                 Normal + Fire + Water + Electric + Grass + Ice + Fighting + 
                 Poison + Ground + Flying + Psychic + Bug + Rock + Ghost + 
                 Dragon + Dark + Steel + Fairy + Mega + Legendary, 
               data = smogon)
summary(model1)
```

```{r}
#| echo: false
exp(coef(model1))
```

```{r}
#| echo: false
smogon <- smogon |>
  mutate(Banned = ifelse(Tier %in% c("Uber", "AG"), 1, 0))

model2 <- glm(Banned ~ Total + Mega + Legendary +
              Normal + Fire + Water + Electric + Grass + Ice + Fighting + 
              Poison + Ground + Flying + Psychic + Bug + Rock + Ghost + 
              Dragon + Dark + Steel + Fairy, 
              data = smogon, family = "binomial")
summary(model2)
```

```{r}
#| echo: false
aug2 <- augment(model2)
aug2$Factor <- as.factor(aug2$Banned)
aug2 <- aug2 |>
  mutate(prob = exp(.fitted)/(1 + exp(.fitted)),
         pred_leg = ifelse(prob > 0.5, "Uber or Above", "OU or Under")) 

aug2 |>
  roc_curve(
    truth = Factor,
    prob, 
    event_level = "second") |> 
  autoplot()
```

```{r}
#| echo: false
aug2 |> 
  roc_auc(
    truth = Factor,
    prob, 
    event_level = "second"
  )
```




